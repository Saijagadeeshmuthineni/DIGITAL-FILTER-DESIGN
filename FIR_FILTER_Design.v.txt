module fir_filter #(
    parameter DATA_WIDTH = 16, 
    parameter COEFF_WIDTH = 16,
    parameter NUM_TAPS = 4
) (
    input wire clk,
    input wire rst,
    input wire [DATA_WIDTH-1:0] x_in, 
    output reg [DATA_WIDTH+COEFF_WIDTH-1:0] y_out 
);

    reg [COEFF_WIDTH-1:0] coeff [0:NUM_TAPS-1];

    reg [DATA_WIDTH-1:0] shift_reg [0:NUM_TAPS-1];

    reg [DATA_WIDTH+COEFF_WIDTH-1:0] acc;

    integer i;

    initial begin
        coeff[0] = 16'h0A00; 
        coeff[1] = 16'h0B00; 
        coeff[2] = 16'h0C00; 
        coeff[3] = 16'h0D00;
    end

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            for (i = 0; i < NUM_TAPS; i = i + 1) begin
                shift_reg[i] <= 0;
            end
            acc <= 0;
            y_out <= 0;
        end else begin
            for (i = NUM_TAPS-1; i > 0; i = i - 1) begin
                shift_reg[i] <= shift_reg[i-1];
            end
            shift_reg[0] <= x_in;

            acc = 0;
            for (i = 0; i < NUM_TAPS; i = i + 1) begin
                acc = acc + shift_reg[i] * coeff[i];
            end

            y_out <= acc; // Update output
        end
    end

endmodule
